/*
    Exercise 2.30: For each of the following declarations indicate whether the object being
    declared has top-level or low-level const.

            const int v2 = 0; int v1 = v2;
            int *p1 = &v1, &r1 = v1;
            const int *p2 = &v2, *const p3 = &i, &r2 = v2;
*/

// Solution by Jannatul Fardouse

    Let's analyze each declaration:

        1. const int v2 = 0;
        Top-level const. 'v2' is a constant integer.

        2. int v1 = v2;
        No const. 'v1' is a non-constant integer.
        
        3. int *p1 = &v1, &r1 = v1;
        No const. 'p1' is a pointer to a non-constant integer, and 'r1' is a reference to a non-constant integer.

        4. const int *p2 = &v2, *const p3 = &i, &r2 = v2;
        Low-level const for 'p2' and 'r2'. Both are pointers or references to constant integers.
        Top-level const for 'p3'. 'p3' is a constant pointer to a non-constant integer.

    Summary:

                'v2': Top-level const
                'v1': No const
                'p1': No const (non-constant pointer)
                'r1': No const (non-constant reference)
                'p2': Low-level const (pointer to constant integer)
                'p3': Top-level const (constant pointer to non-constant integer)
                'r2': Low-level const (reference to constant integer)

                